import java.awt.Color;
import java.awt.GridLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

public class MsGUI extends JFrame 
{

	private static final long serialVersionUID = 2L;
        private static final int BUTTON_SIZE = 80;
	
	private Board board;
	private JButton[][] buttons;
	private JPanel gamePanel;
	private boolean isEnabled;

	public MsGUI(Board board) {
		this.board = board;
		this.isEnabled = true;
		
		
                setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                setTitle("Minesweeper");
		setSize(board.getWidth(board.getRevealed()) * BUTTON_SIZE, board.getHeight(board.getRevealed()) * BUTTON_SIZE);
		
		gamePanel = new JPanel(new GridLayout(board.getHeight(board.getRevealed()), board.getWidth(board.getRevealed())));
		buttons = new JButton[board.getHeight(board.getHidden())][board.getWidth(board.getHidden())];

		for (int row = 0; row < board.getHeight(board.getRevealed()); row++) {
			for (int col = 0; col < board.getWidth(board.getRevealed()); col++) {
				JButton b = new JButton("" + board.getHidden(row,col));
				b.setBackground(new Color(200, 200, 200));
				b.addMouseListener(new MineSquareListener(row, col));
				buttons[col][row] = b;
				gamePanel.add(b);
			}
		}

		this.add(gamePanel);
		this.setVisible(true);
	}

	public void lose(String s) 
        {
		JOptionPane.showMessageDialog(this, s, "YOU LOSE",
		        JOptionPane.ERROR_MESSAGE);
		setGridEnabled(false);
	}

	public void win(String s) 
        {
		JOptionPane.showMessageDialog(this, s, "YOU WIN!",
			JOptionPane.INFORMATION_MESSAGE);
		setGridEnabled(false);
	}
	
	private void setGridEnabled(boolean option) 
        {
		isEnabled = option;
	}

	private class MineSquareListener extends MouseAdapter {
		private int x, y;

		public MineSquareListener(int x, int y) {
			super();
			this.x = x;
			this.y = y;
		}

		@Override
		public void mousePressed(MouseEvent e) {
			if(!isEnabled)
				return;
			if (e.getButton() == MouseEvent.BUTTON2)
                        {
                            
                        }

			JButton b;
			for (int i = 0; i < board.getHeight(board.getHidden()); i++) 
                        {
				for (int j = 0; j < board.getWidth(board.getHidden()); j++) 
                                {
					char c;
                                        b = buttons[i][j];
					if (i == y && j == x)
                                        {
                                            c = board.getRevealed(i,j);
                                            b.setBackground(Color.WHITE);
                                            revealCell(board.getHidden(), board.getRevealed(), y, x,this.done());
                                            b.setText("" + c);
                                            int count = 0;
                                            for(int x = 0; x < 5; x++)
                                                for(int y = 0; y < 5; y++)
                                                {
                                                    if(board.getHidden(y, x) != '*')
                                                        count++;
                                                    if(count == 20)
                                                        win("Congrats");
                                                }
                                        }
				}
			}
			repaint();
		}
                
        public int[][] done()
        {
            int[][] done = {{0,0,0,0,0},{0,0,0,0,0},{0,0,0,0,0},{0,0,0,0,0},{0,0,0,0,0}};
            return done;
        }
        
        public void flag()
                
        public void revealCell(char[][] hidden, char[][] revealed, int x, int y, int done[][])
        {
            hidden[x][y] = revealed[x][y];
            
            int count = 0;
            done[x][y] = 1;
            char c;
            JButton b = buttons[x][y];
        
            b.setBackground(Color.WHITE);
            b.setText(""+revealed[x][y]);
        
            if(revealed[x][y] == 'B')
            {
               lose("You hit a bomb!");
               return; 
            }

                        
            for(int i = -1; i < 2; i++)
            {
              for(int j = -1; j < 2; j++)
                {
                 if(x+i >= 0 && y+j >= 0 && x+i <= 4 && y+j <= 4)
                    {
                       if(revealed[x+i][y+j] != 'B' && revealed[x][y] == '0'&& done[x+i][y+j] == 0)
                       {               
                            revealCell(hidden,revealed,x+i,y+j,done); 
                       }
                    }
                }	
            }
        }
    }
}
